{"version":3,"sources":["resources/sound/click1.wav","resources/sound/click2.wav","components/Metronome.js","index.js"],"names":["Metronome","props","startStop","state","playing","clearInterval","timer","setState","setInterval","playClick","bpm","count","beatsPerMeasure","click2","play","click1","handleBpmChange","e","target","value","Audio","className","icon","faSkull","size","this","type","min","max","onChange","onClick","style","backgroundColor","faStop","faPlay","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2OAAe,G,MAAA,IAA0B,oCCA1B,MAA0B,mC,cC+F1BA,E,kDArFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,UAAY,WACJ,EAAKC,MAAMC,SACXC,cAAc,EAAKC,OACnB,EAAKC,SAAS,CACVH,SAAS,MAGb,EAAKE,MAAQE,YACT,EAAKC,UACJ,GAAK,EAAKN,MAAMO,IAAO,KAE5B,EAAKH,SAAS,CACNI,MAAO,EACPP,SAAS,GAEb,EAAKK,aA3BE,EAgCnBA,UAAY,WACJ,EAAKN,MAAMQ,MAAQ,EAAKR,MAAMS,kBAAoB,EAClD,EAAKC,OAAOC,OAEZ,EAAKC,OAAOD,OAEhB,EAAKP,UAAS,SAAAJ,GAAK,MAAK,CACpBQ,OAAQR,EAAMQ,MAAQ,GAAKR,EAAMS,qBAvCtB,EA2CnBI,gBAAkB,SAAAC,GACd,IAAMP,EAAMO,EAAEC,OAAOC,MACjB,EAAKhB,MAAMC,SACXC,cAAc,EAAKC,OACnB,EAAKA,MAAQE,YAAY,EAAKC,UAAY,GAAKC,EAAO,KACtD,EAAKH,SAAS,CACVI,MAAO,EACPD,SAGJ,EAAKH,SAAS,CAAEG,SAnDpB,EAAKP,MAAQ,CACTC,SAAS,EACTO,MAAO,EACPD,IAAK,IACLE,gBAAiB,GAErB,EAAKG,OAAS,IAAIK,MAAML,GACxB,EAAKF,OAAS,IAAIO,MAAMP,GATT,E,qDA0Df,OACI,sBAAKQ,UAAU,YAAf,UACI,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAiBC,KAAMC,IAASC,KAAM,OACrC,sBAAKH,UAAW,gBAAhB,UACII,KAAKtB,MAAMO,IADf,UAGD,uBACIgB,KAAK,QACLC,IAAI,KACJC,IAAI,MACJT,MAAOM,KAAKtB,MAAMO,IAClBmB,SAAUJ,KAAKT,qBAEtBS,KAAKtB,MAAMC,QACR,wBAAQ0B,QAASL,KAAKvB,UAAW6B,MAAO,CAACC,gBAAiB,WAA1D,SACI,cAAC,IAAD,CAAiBV,KAAMW,IAAQT,KAAM,SAEzC,wBAAQM,QAASL,KAAKvB,UAAW6B,MAAO,CAACC,gBAAiB,WAA1D,SACI,cAAC,IAAD,CAAiBV,KAAMY,IAAQV,KAAM,gB,GA9ErCW,IAAMC,WCN9BC,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.e96d937d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/click1.07cda4b8.wav\";","export default __webpack_public_path__ + \"static/media/click2.5b5930c4.wav\";","import React from 'react';\r\n\r\nimport '../resources/style/Metronome.css';\r\n\r\nimport click1 from '../resources/sound/click1.wav';\r\nimport click2 from '../resources/sound/click2.wav';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSkull, faPlay, faStop } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Metronome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playing: false,\r\n            count: 0,\r\n            bpm: 100,\r\n            beatsPerMeasure: 4\r\n        };\r\n        this.click1 = new Audio(click1);\r\n        this.click2 = new Audio(click2);\r\n    }\r\n\r\n    startStop = () => {\r\n        if (this.state.playing) {\r\n            clearInterval(this.timer);\r\n            this.setState({\r\n                playing: false\r\n            });\r\n        } else {\r\n            this.timer = setInterval(\r\n                this.playClick,\r\n                (60 / this.state.bpm) * 1000\r\n            );\r\n            this.setState({\r\n                    count: 0,\r\n                    playing: true\r\n                },\r\n                this.playClick\r\n            );\r\n        }\r\n    }\r\n\r\n    playClick = () => {\r\n        if (this.state.count % this.state.beatsPerMeasure === 0) {\r\n            this.click2.play();\r\n        } else {\r\n            this.click1.play();\r\n        }\r\n        this.setState(state => ({\r\n            count: (state.count + 1) % state.beatsPerMeasure\r\n        }));\r\n    };\r\n\r\n    handleBpmChange = e => {\r\n        const bpm = e.target.value;\r\n        if (this.state.playing) {\r\n            clearInterval(this.timer);\r\n            this.timer = setInterval(this.playClick, (60 / bpm) * 1000);\r\n            this.setState({\r\n                count: 0,\r\n                bpm\r\n            });\r\n        } else {\r\n            this.setState({ bpm });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"metronome\" >\r\n                <div className=\"bpm-slider\">\r\n                    <FontAwesomeIcon icon={faSkull} size={\"2x\"}/>\r\n                     <div className={\"bpm-container\"}>\r\n                        {this.state.bpm} BPM\r\n                    </div>\r\n                    <input\r\n                        type=\"range\"\r\n                        min=\"60\"\r\n                        max=\"240\"\r\n                        value={this.state.bpm}\r\n                        onChange={this.handleBpmChange}/>\r\n                </div>\r\n                {this.state.playing ?\r\n                    <button onClick={this.startStop} style={{backgroundColor: \"#FF0000\"}}>\r\n                        <FontAwesomeIcon icon={faStop} size={\"2x\"}/>\r\n                    </button> :\r\n                    <button onClick={this.startStop} style={{backgroundColor: \"#1b9b4e\"}}>\r\n                        <FontAwesomeIcon icon={faPlay} size={\"2x\"}/>\r\n                    </button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Metronome;","import ReactDOM from 'react-dom';\nimport Metronome from './components/Metronome';\n\nReactDOM.render(<Metronome />, document.getElementById('root'));"],"sourceRoot":""}